#### Generate random integer using only random.random() ####
import random
import math

# will use decimals generated by the random.random() float
# define min and max (m,n)
# m, n >= 0 , n <= 10**4 - 1 (arbitrary)
# assume, for simplicity, that m = 0
# get how many possible integers in range - ex: 0,8 - 9 posible integers -> possible = n - m + 1
# think or range as sum of y segments, each ordered from m to n
# select range = 10 ** x, so that range / possible >= 1 -> range = len(str(possible)) + 1
# assume m != 0
# apply same logic and add m to each result
# if not floor(random * range), errors when adding m to the result -> generates an extra number
# testing - call random_range a lot in a loop
def random_range(m, n):
    # check if conditions are met
    if m < 0 or n < 0 or n >= 10000:
        return "Incorrect range"
    # get number of possible int
    possible_int = n - m + 1
    # used to extract integer from generated random
    range = 10 ** len(str(possible_int))
    # get random
    rand = math.floor(random.random() * range) 
    unit = range / possible_int
    # print(f"{possible_int} {range} {unit} {rand * range // 1}")
    return math.floor( rand / unit ) + m

m = 1
n = 10
iterations = 20000
i = 0
while i  < iterations :
    rand = random_range(m, n)
    ### test
    # if rand > n:
    #     print(f"error here {rand}")
    ### end test
    print(rand)
    i += 1
